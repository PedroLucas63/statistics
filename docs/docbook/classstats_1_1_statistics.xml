<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classstats_1_1_statistics" xml:lang="pt-BR">
<title>Referência do Template da Classe stats::Statistics&lt; TYPE &gt;</title>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary></indexterm>
<para>

<para>Uma classe que fornece métodos de estatística como media, mediana e moda. </para>
 
</para>
<para>
<computeroutput>#include &lt;Statistics.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Membros Públicos    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classstats_1_1_statistics_1a4478cf7c0646a7246613d86bdbb83e53">Statistics</link> (bool populationData=true)</para>

<para>Construtor padrão. </para>
</listitem>
            <listitem><para>template&lt;typename ItInput , typename  = typename std::iterator_traits&lt;ItInput&gt;::iterator_category&gt; </para><para><link linkend="_classstats_1_1_statistics_1a1f50dd9b77aa94d3c158e159101e76eb">Statistics</link> (ItInput first, ItInput last, bool populationData=true)</para>

<para>Construtor com um range de valores. </para>
</listitem>
            <listitem><para><link linkend="_classstats_1_1_statistics_1a24d21847d0dc97776fcad300f3eb228a">Statistics</link> (std::initializer_list&lt; TYPE &gt; list, bool populationData=true)</para>

<para>Construtor com uma lista de valores. </para>
</listitem>
            <listitem><para>std::vector&lt; TYPE &gt; <link linkend="_classstats_1_1_statistics_1aedaf64ac5f10e910f0d139bda96a6e4a">getValues</link> () const</para>

<para>Obter os valores. </para>
</listitem>
            <listitem><para>bool <link linkend="_classstats_1_1_statistics_1a6ab1698a69d1c46e50894a14879d6518">isPopulationData</link> () const</para>

<para>Informa se os valores são de dados de população ou de amostra. </para>
</listitem>
            <listitem><para>template&lt;typename ItInput , typename  = typename std::iterator_traits&lt;ItInput&gt;::iterator_category&gt; </para><para><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics_1a5868d8066a92bba4f2a79750b8787acb">setValues</link> (ItInput first, ItInput last)</para>

<para>Define os valores com um range. </para>
</listitem>
            <listitem><para><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics_1a7f65ade022fe9da4d6ea4ec5fc73a19d">setValues</link> (std::initializer_list&lt; TYPE &gt; list)</para>

<para>Define os valores com uma lista. </para>
</listitem>
            <listitem><para><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics_1adccc7acbcdc9405a0e28988418360b21">setPopulationData</link> (bool populationData=true)</para>

<para>Define se os valores são de dados de população ou de amostra. </para>
</listitem>
            <listitem><para>int <link linkend="_classstats_1_1_statistics_1a5d3a394412a143a7e63378ebdf6497a1">size</link> () const</para>

<para>Retorna o tamanho do conjunto de dados. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1a15a337957ee8267406a80b8e92df4c51">calculateSum</link> (std::function&lt; double(TYPE)&gt; function=[](TYPE value) { return value;}) const</para>

<para>Calcula a soma dos elementos do conjunto de dados com base em uma função. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1a87940e9555c682df9c1a04b7073fe0e3">mean</link> () const</para>

<para>Calcula a média dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1ab4522784ff98a9388b310fdda18f2bfb">median</link> ()</para>

<para>Calcula a mediana dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>TYPE <link linkend="_classstats_1_1_statistics_1a1bde50be330ea9ed5d1aee3fc19f6293">mode</link> () const</para>

<para>Calcula a moda dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>TYPE <link linkend="_classstats_1_1_statistics_1a3b51b0ddefd7a41132bb963dca80595c">amplitude</link> () const</para>

<para>Calcula a amplitude dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1a3ecbdb096e994586cd0441def847db5c">variance</link> () const</para>

<para>Calcula a variância dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1ae84330f13ceb0dcf26ce853596bc4b95">standardDeviation</link> () const</para>

<para>Calcula o desvio padrão dos elementos do conjunto de dados. </para>
</listitem>
            <listitem><para>double <link linkend="_classstats_1_1_statistics_1a344e0dec8df89d8b0014d90cd1023cea">coefficientOfVariation</link> () const</para>

<para>Calcula o coeficiente de variação dos elementos do conjunto de. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descrição detalhada</title>
<simplesect><title>template&lt;typename TYPE&gt;<?linebreak?>class stats::Statistics&lt; TYPE &gt;</title></simplesect>

<para>Uma classe que fornece métodos de estatística como media, mediana e moda. </para>



<para>
                <formalpara>
                    <title>
Parâmetros do template</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>TYPE</entry><entry>
<para>Define o tipo de dados. Deve ser um tipo numérico. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Construtores e Destrutores</title>
<anchor xml:id="_classstats_1_1_statistics_1a4478cf7c0646a7246613d86bdbb83e53"/><section>
    <title>Statistics()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>Statistics</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>Statistics</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::Statistics (bool populationData = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Construtor padrão. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>populationData</entry><entry>
<para>Define se os valores são de dados de população ou de uma amostra. O padrão é True. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a1f50dd9b77aa94d3c158e159101e76eb"/><section>
    <title>Statistics()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>Statistics</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>Statistics</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><computeroutput>template&lt;typename ItInput , typename  = typename std::iterator_traits&lt;ItInput&gt;::iterator_category&gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::Statistics (ItInput first, ItInput last, bool populationData = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Construtor com um range de valores. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros do template</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ItInput</entry><entry>
<para>Tipo do iterador de entrada.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>first</entry><entry>
<para>Primeiro valor do range. </para>
</entry>
                            </row>
                            <row>
<entry>last</entry><entry>
<para>Ultimo valor do range. </para>
</entry>
                            </row>
                            <row>
<entry>populationData</entry><entry>
<para>Define se os valores são de dados de população ou de uma amostra. O padrão é True. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a24d21847d0dc97776fcad300f3eb228a"/><section>
    <title>Statistics()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>Statistics</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>Statistics</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::Statistics (std::initializer_list&lt; TYPE &gt; list, bool populationData = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Construtor com uma lista de valores. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>list</entry><entry>
<para>Lista de valores. </para>
</entry>
                            </row>
                            <row>
<entry>populationData</entry><entry>
<para>Define se os valores são de dados de população ou de uma amostra. O padrão é True. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentação das funções</title>
<anchor xml:id="_classstats_1_1_statistics_1a3b51b0ddefd7a41132bb963dca80595c"/><section>
    <title>amplitude()</title>
<indexterm><primary>amplitude</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>amplitude</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>TYPE <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::amplitude ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a amplitude dos elementos do conjunto de dados. </para>
</para>

<para>A amplitude é a diferença entre o maior e o menor elemento do conjunto de dados.</para>

<para><formalpara><title>Retorna</title>

<para>A amplitude dos elementos do conjunto de dados.</para>
</formalpara>

                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>se o conjunto de dados estiver vazio. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a15a337957ee8267406a80b8e92df4c51"/><section>
    <title>calculateSum()</title>
<indexterm><primary>calculateSum</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>calculateSum</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::calculateSum (std::function&lt; double(TYPE)&gt; function = <computeroutput>[](TYPE&#160;value)&#160;{&#160;return&#160;value;&#160;}</computeroutput>
) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a soma dos elementos do conjunto de dados com base em uma função. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>function</entry><entry>
<para>Uma função que recebe um elemento do conjunto de dados e retorna um double que deve ser somado ao total. O padrão é o próprio elemento do conjunto de dados.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>A soma dos elementos do conjunto de dados com base na função. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a344e0dec8df89d8b0014d90cd1023cea"/><section>
    <title>coefficientOfVariation()</title>
<indexterm><primary>coefficientOfVariation</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>coefficientOfVariation</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::coefficientOfVariation ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula o coeficiente de variação dos elementos do conjunto de. </para>
</para>

<para>O coeficiente de variação é a proporção entre a variância e a média.</para>

<para><formalpara><title>Retorna</title>

<para>O coeficiente de variação dos elementos do conjunto de dados. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1aedaf64ac5f10e910f0d139bda96a6e4a"/><section>
    <title>getValues()</title>
<indexterm><primary>getValues</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>getValues</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>std::vector&lt; TYPE &gt; <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::getValues ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Obter os valores. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>Os valores. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a6ab1698a69d1c46e50894a14879d6518"/><section>
    <title>isPopulationData()</title>
<indexterm><primary>isPopulationData</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>isPopulationData</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>bool <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::isPopulationData ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Informa se os valores são de dados de população ou de amostra. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>True se os valores são de dados de população e False caso contrário. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a87940e9555c682df9c1a04b7073fe0e3"/><section>
    <title>mean()</title>
<indexterm><primary>mean</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>mean</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::mean ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a média dos elementos do conjunto de dados. </para>
</para>

<para>A média é a soma dos elementos dividida pelo número de elementos.</para>

<para><formalpara><title>Retorna</title>

<para>A média dos elementos do conjunto de dados. Se o conjunto estiver vazio retorna 0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1ab4522784ff98a9388b310fdda18f2bfb"/><section>
    <title>median()</title>
<indexterm><primary>median</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>median</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::median ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a mediana dos elementos do conjunto de dados. </para>
</para>

<para>A mediana é o elemento central do conjunto de dados.</para>

<para><formalpara><title>Retorna</title>

<para>A mediana dos elementos do conjunto de dados.</para>
</formalpara>

                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>se o conjunto de dados estiver vazio. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a1bde50be330ea9ed5d1aee3fc19f6293"/><section>
    <title>mode()</title>
<indexterm><primary>mode</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>mode</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>TYPE <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::mode ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a moda dos elementos do conjunto de dados. </para>
</para>

<para>A moda é o elemento que mais se repete no conjunto de dados.</para>

<para><formalpara><title>Retorna</title>

<para>A moda dos elementos do conjunto de dados.</para>
</formalpara>

                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>se o conjunto de dados estiver vazio. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1adccc7acbcdc9405a0e28988418360b21"/><section>
    <title>setPopulationData()</title>
<indexterm><primary>setPopulationData</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>setPopulationData</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::setPopulationData (bool populationData = <computeroutput>true</computeroutput>
)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Define se os valores são de dados de população ou de amostra. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>populationData</entry><entry>
<para>Define se os valores são de dados de população ou de uma amostra. O padrão é True.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>A referência do objeto de <link linkend="_classstats_1_1_statistics">Statistics</link> atual. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a5868d8066a92bba4f2a79750b8787acb"/><section>
    <title>setValues()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>setValues</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>setValues</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><computeroutput>template&lt;typename ItInput , typename  = typename std::iterator_traits&lt;ItInput&gt;::iterator_category&gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::setValues (ItInput first, ItInput last)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Define os valores com um range. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros do template</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>ItInput</entry><entry>
<para>Tipo do iterador de entrada.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>first</entry><entry>
<para>Primeiro valor do range. </para>
</entry>
                            </row>
                            <row>
<entry>last</entry><entry>
<para>Ultimo valor do range.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>A referência do objeto de <link linkend="_classstats_1_1_statistics">Statistics</link> atual. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a7f65ade022fe9da4d6ea4ec5fc73a19d"/><section>
    <title>setValues()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>setValues</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>setValues</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_classstats_1_1_statistics">Statistics</link> &amp; <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::setValues (std::initializer_list&lt; TYPE &gt; list)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Define os valores com uma lista. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>list</entry><entry>
<para>Lista de valores.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>A referência do objeto de <link linkend="_classstats_1_1_statistics">Statistics</link> atual. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a5d3a394412a143a7e63378ebdf6497a1"/><section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>size</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>int <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::size ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Retorna o tamanho do conjunto de dados. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>O tamanho do conjunto de dados. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1ae84330f13ceb0dcf26ce853596bc4b95"/><section>
    <title>standardDeviation()</title>
<indexterm><primary>standardDeviation</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>standardDeviation</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::standardDeviation ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula o desvio padrão dos elementos do conjunto de dados. </para>
</para>

<para>O desvio padrão é a raiz quadrada da variância.</para>

<para><formalpara><title>Retorna</title>

<para>O desvio padrão dos elementos do conjunto de dados. Se o conjunto estiver vazio retorna 0. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classstats_1_1_statistics_1a3ecbdb096e994586cd0441def847db5c"/><section>
    <title>variance()</title>
<indexterm><primary>variance</primary><secondary>stats::Statistics&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>stats::Statistics&lt; TYPE &gt;</primary><secondary>variance</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_classstats_1_1_statistics">stats::Statistics</link>&lt; TYPE &gt;::variance ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calcula a variância dos elementos do conjunto de dados. </para>
</para>

<para>A variância é a soma dos quadrados das diferenças entre cada elemento e a média do conjunto de dados.</para>

<para><formalpara><title>Retorna</title>

<para>A variância dos elementos do conjunto de dados. Se o conjunto estiver vazio retorna 0. </para>
</formalpara>
</para>
</section>
<para>
A documentação para essa classe foi gerada a partir do seguinte arquivo:</para>
src/include/<link linkend="__statistics_8hpp">Statistics.hpp</link></section>
</section>
