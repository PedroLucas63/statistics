<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_discrete" xml:lang="pt-BR">
<title>Referência do Template da Classe Discrete&lt; TYPE &gt;</title>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary></indexterm>
<para>

<para>Uma classe para representar uma distribuição de dados discretos. </para>
 
</para>
<para>
<computeroutput>#include &lt;Discrete.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Membros Públicos    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_discrete_1a9ec9797a8a85ec68c38138eac9cd46f6">Discrete</link> (std::unordered_map&lt; TYPE, double &gt; probabilities)</para>

<para>Constructor for the <link linkend="_class_discrete">Discrete</link> class. </para>
</listitem>
            <listitem><para>double <link linkend="_class_discrete_1a15bf1f18bb76f9d14313b5d932164458">getProbability</link> (TYPE value) const</para>

<para>Retrieves the probability of a given value. </para>
</listitem>
            <listitem><para>std::unordered_map&lt; TYPE, double &gt; <link linkend="_class_discrete_1a4ddb81cd5aa0c89fc7cbd705d396880c">getProbabilities</link> () const</para>

<para>Retrieves the probability distribution. </para>
</listitem>
            <listitem><para><link linkend="_class_discrete">Discrete</link> &amp; <link linkend="_class_discrete_1a7ba3a169165603ac42e80c0fb4990545">setProbabilities</link> (std::unordered_map&lt; TYPE, double &gt; probabilities)</para>

<para>Sets the probability distribution. </para>
</listitem>
            <listitem><para>double <link linkend="_class_discrete_1a93e18f96e474269c1881fae10c32cdfd">mean</link> () const</para>

<para>Calculates the mean of the distribution. </para>
</listitem>
            <listitem><para>double <link linkend="_class_discrete_1a401c200897d1eac25b769bc2fd622428">variance</link> () const</para>

<para>Calculates the variance of the distribution. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Membros protegidos    </title>
        <itemizedlist>
            <listitem><para>double <link linkend="_class_discrete_1a2236be702570d1d1910e457c99f39cbe">sumOfProbabilities</link> ()</para>

<para>Calculates the sum of all probabilities in the distribution. </para>
</listitem>
            <listitem><para>void <link linkend="_class_discrete_1aa5ef0af5b59335f36cd451b4e9f62afe">checkProbabilities</link> ()</para>

<para>Checks if the probabilities sum to 1. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Atributos Protegidos    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_class_discrete_1a9ce6f5f3f3f3ba0542980c03a5016c88"/>std::unordered_map&lt; TYPE, double &gt; <emphasis role="strong">probabilities</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Descrição detalhada</title>
<simplesect><title>template&lt;typename TYPE&gt;<?linebreak?>class Discrete&lt; TYPE &gt;</title></simplesect>

<para>Uma classe para representar uma distribuição de dados discretos. </para>



<para>
                <formalpara>
                    <title>
Parâmetros do template</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>TYPE</entry><entry>
<para>The type of the values. Must be a numeric type. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Construtores e Destrutores</title>
<anchor xml:id="_class_discrete_1a9ec9797a8a85ec68c38138eac9cd46f6"/><section>
    <title>Discrete()</title>
<indexterm><primary>Discrete</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>Discrete</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;<link linkend="_class_discrete">::Discrete</link> (std::unordered_map&lt; TYPE, double &gt; probabilities)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Constructor for the <link linkend="_class_discrete">Discrete</link> class. </para>
</para>

<para>Initializes the <link linkend="_class_discrete">Discrete</link> class with a given probability distribution.</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>probabilities</entry><entry>
<para>A map of values to their respective probabilities.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>if the sum of probabilities is not equal to 1. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
<section>
<title>Documentação das funções</title>
<anchor xml:id="_class_discrete_1aa5ef0af5b59335f36cd451b4e9f62afe"/><section>
    <title>checkProbabilities()</title>
<indexterm><primary>checkProbabilities</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>checkProbabilities</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>void <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::checkProbabilities ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Checks if the probabilities sum to 1. </para>
</para>

<para>
                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>if the sum of probabilities is not equal to 1. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_discrete_1a4ddb81cd5aa0c89fc7cbd705d396880c"/><section>
    <title>getProbabilities()</title>
<indexterm><primary>getProbabilities</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>getProbabilities</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>std::unordered_map&lt; TYPE, double &gt; <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::getProbabilities ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Retrieves the probability distribution. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>A map of values to their respective probabilities. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_discrete_1a15bf1f18bb76f9d14313b5d932164458"/><section>
    <title>getProbability()</title>
<indexterm><primary>getProbability</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>getProbability</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::getProbability (TYPE value) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Retrieves the probability of a given value. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>value</entry><entry>
<para>The value to retrieve the probability of.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>The probability of the given value.</para>
</formalpara>

                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::out_of_range</entry><entry>
<para>if the value does not exist in the distribution. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_discrete_1a93e18f96e474269c1881fae10c32cdfd"/><section>
    <title>mean()</title>
<indexterm><primary>mean</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>mean</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::mean ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calculates the mean of the distribution. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>The mean of the distribution. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_discrete_1a7ba3a169165603ac42e80c0fb4990545"/><section>
    <title>setProbabilities()</title>
<indexterm><primary>setProbabilities</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>setProbabilities</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput><link linkend="_class_discrete">Discrete</link> &amp; <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::setProbabilities (std::unordered_map&lt; TYPE, double &gt; probabilities)<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Sets the probability distribution. </para>
</para>

<para>
                <formalpara>
                    <title>
Parâmetros</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>probabilities</entry><entry>
<para>A map of values to their respective probabilities.</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Retorna</title>

<para>A reference to the <link linkend="_class_discrete">Discrete</link> object.</para>
</formalpara>

                <formalpara>
                    <title>
Exceções</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>std::runtime_error</entry><entry>
<para>if the sum of probabilities is not equal to 1. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_class_discrete_1a2236be702570d1d1910e457c99f39cbe"/><section>
    <title>sumOfProbabilities()</title>
<indexterm><primary>sumOfProbabilities</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>sumOfProbabilities</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::sumOfProbabilities ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>

<para>Calculates the sum of all probabilities in the distribution. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>The sum of the probabilities. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_class_discrete_1a401c200897d1eac25b769bc2fd622428"/><section>
    <title>variance()</title>
<indexterm><primary>variance</primary><secondary>Discrete&lt; TYPE &gt;</secondary></indexterm>
<indexterm><primary>Discrete&lt; TYPE &gt;</primary><secondary>variance</secondary></indexterm>
<computeroutput>template&lt;typename TYPE &gt; </computeroutput><para><computeroutput>double <link linkend="_class_discrete">Discrete</link>&lt; TYPE &gt;::variance ( ) const<computeroutput>[inline]</computeroutput></computeroutput></para><para>

<para>Calculates the variance of the distribution. </para>
</para>

<para><formalpara><title>Retorna</title>

<para>The variance of the distribution. </para>
</formalpara>
</para>
</section>
<para>
A documentação para essa classe foi gerada a partir do seguinte arquivo:</para>
src/include/models/discrete/Discrete.hpp</section>
</section>
